
$primColor: #1b1c25;
$bgColor: white;
$subtextColor: #bbb;
$mod_1: 1.5; 
$mod_2: 2.1; 


$min_width: 360px;
$max_width: 1920px;
$min_font: 20px;
$max_font: 26px;

@mixin h3Text($direction) {
    padding-top: 5%;
    margin:auto;
    width: 80%;
    text-align: $direction;
    color: $bgColor;
    
}
@mixin zigZag {
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-template-rows: 1fr;
    background-color: $primColor;
    overflow: hidden;
    min-height: 50vh;
    
}
@mixin parallaxBg {
    background-attachment: fixed;
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
    
}

@mixin imageProperties($url){
    background-image: url($url);
    background-size: cover;
    background-position: center;
}


@function strip-unit($value) {
    @return $value / ($value * 0 + 1);
  }
  
  @mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {
    $u1: unit($min-vw);
    $u2: unit($max-vw);
    $u3: unit($min-font-size);
    $u4: unit($max-font-size);
  
    @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
      & {
        font-size: $min-font-size;
        @media screen and (min-width: $min-vw) {
          font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
        }
        @media screen and (min-width: $max-vw) {
          font-size: $max-font-size;
        }
      }
    }
  }


  
